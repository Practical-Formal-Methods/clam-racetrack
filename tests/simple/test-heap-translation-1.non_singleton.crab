; RUN: %clam -O0 --crab-inter --crab-track=arr --crab-only-cfg --crab-print-cfg \
; RUN:           "%S/test-heap-translation-1.c" 2>&1 | OutputCheck %s --comment=";"

; CHECK: \(@V_[0-9]+:arr_int,@V_[0-9]+:arr_int,@V_[0-9]+:arr_int\) declare foo\(@V_[0-9]+:arr_int,@V_[0-9]+:arr_int,@V_[0-9]+:arr_int\)
(@V_4:arr_int,@V_9:arr_int,@V_11:arr_int) declare foo(@V_7:arr_int,@V_8:arr_int,@V_10:arr_int)
_1:
  @V_11 = @V_10;
  @V_9 = @V_8;
  @V_4 = @V_7;
  _2 = array_load(@V_4,@V_3,sz=4);
  _store = _2+1;
  array_store(@V_4,@V_6,_store,sz=4);


; CHECK: \(@V_[0-9]+:arr_int,@V_[0-9]+:arr_int,@V_[0-9]+:arr_int\) declare bar\(@V_[0-9]+:arr_int,@V_[0-9]+:arr_int,@V_[0-9]+:arr_int\)
(@V_4:arr_int,@V_9:arr_int,@V_11:arr_int) declare bar(@V_17:arr_int,@V_18:arr_int,@V_19:arr_int)
_1:
  @V_11 = @V_19;
  @V_9 = @V_18;
  @V_4 = @V_17;
  _2 = array_load(@V_9,@V_14,sz=4);
  _store = _2+1;
  array_store(@V_9,@V_16,_store,sz=4);


_19:int declare main()
_call:
  @V_4[0...3] := 5;
  @V_9[0...3] := 3;
  @V_11[0...39] := 0;
; CHECK: \(@V_[0-9]+,@V_[0-9]+,@V_[0-9]+\)= call foo\(@V_[0-9]+:arr_int,@V_[0-9]+:arr_int,@V_[0-9]+:arr_int\)
  (@V_4,@V_9,@V_11)= call foo(@V_4:arr_int,@V_9:arr_int,@V_11:arr_int);
  .0 = 0;
  goto _.0;
_.0:
  goto __@bb_8,__@bb_9;
__@bb_8:
  assume(.0 <= 9);
  goto _4;
_4:
  goto __@bb_10,__@bb_11;
__@bb_10:
  assume(_6 = 0);
  goto _11;
_11:
  _12 = array_load(@V_4,@V_29,sz=4);
  array_store(@V_11,@V_31,_12,sz=4);
  goto _14;
_14:
  _br3 = .0+1;
  .0 = _br3;
  goto _.0;
__@bb_11:
  assume(_6 != 0);
  goto _8;
_8:
  _9 = array_load(@V_9,@V_25,sz=4);
  array_store(@V_11,@V_27,_9,sz=4);
  goto _14;
__@bb_9:
  assume(-.0 <= -10);
  goto _call4;
_call4:
; CHECK: \(@V_[0-9]+,@V_[0-9]+,@V_[0-9]+\)= call bar\(@V_[0-9]+:arr_int,@V_[0-9]+:arr_int,@V_[0-9]+:arr_int\)
  (@V_4,@V_9,@V_11)= call bar(@V_4:arr_int,@V_9:arr_int,@V_11:arr_int);
  _17 = .0+-1;
  _19 = array_load(@V_11,@V_36,sz=4);
  _20 = (_19 <=_u 6);
  assert(_20);
  return _19;
